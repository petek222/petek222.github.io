{"version":3,"sources":["documents/Figaro.wav","documents/Resume.pdf","documents/MATH3620.pdf","documents/LAT3130.pdf","documents/LAT3170.pdf","documents/HART1330W.pdf","logo.svg","App.js","bio.js","pageinfo.js","tabs/work.js","tabs/projects.js","tabs/interests.js","tabs/contact.js","tabs/school.js","tabs/tools.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","basename","Bio","React","Component","PageInfo","Work","props","state","isToggleOn","handleClick","bind","this","ReactDOM","unmountComponentAtNode","document","getElementById","render","workList","setState","Nav","vertical","NavItem","NavLink","href","target","onClick","Projects","figaro","download","Interests","Contact","resume","School","math3620","lat3130","hart1330","lat3170","Tools","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0IAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,wECA3CD,EAAOC,QAAU,IAA0B,kC,wHCgB5BC,MAVf,WACE,OACI,yBAAKC,UAAU,cACb,kBAAC,IAAD,CAAeC,SAAS,6CACxB,kBAAC,IAAD,CAAQD,UAAU,UAChB,oD,mCCRWE,E,iLAGb,OACA,6BACI,0BAAMF,UAAY,OAAlB,kdAMA,0BAAMA,UAAY,OAAlB,uQ,GAXqBG,IAAMC,WCClBC,E,iLAGb,OACA,kBAAC,IAAD,KACA,6BACI,0BAAML,UAAY,OAAlB,8D,GAN0BG,IAAMC,W,gCCGvBE,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,aALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,aAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAKvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WACxB,kBAACsB,EAAA,EAAD,CAAStB,UAAY,aACnB,kBAACuB,EAAA,EAAD,CAASC,KAAK,yDAAyDC,OAAS,SAASzB,UAAY,YAAW,0JAElH,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,4DAA4DC,OAAS,SAASzB,UAAY,YAAW,4IAErH,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,kBAAiB,4JAExC,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,6CAA6CC,OAAS,SAASzB,UAAY,YAAW,sHAEtG,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,kBAAiB,sLAExC,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,yEAAyEC,OAAS,SAASzB,UAAY,YAAW,mKAElI,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,mCAAmCC,OAAS,SAASzB,UAAY,YAAW,+G,+BAOhG,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACI,2D,GApEcG,IAAMC,W,iBCCnBuB,E,YAEnB,WAAYpB,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,gBALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,gBAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAKvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WACtB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,qDAAqDC,OAAS,SAASzB,UAAY,YAAW,4HAEhH,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,4CAA4CC,OAAS,SAASzB,UAAY,YAAW,mJAErG,6BACA,kBAACsB,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAASC,KAAMI,IAAQC,UAAQ,EAACJ,OAAS,SAASzB,UAAY,YAAW,0JAE3E,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,iDAAiDC,OAAS,SAASzB,UAAY,YAAW,mFAE1G,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,qCAAqCC,OAAS,SAASzB,UAAY,YAAW,2IAE9F,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,kBAAiB,6D,+BAQ5C,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACE,+D,GAlEsBG,IAAMC,WCDvB0B,E,YAEnB,WAAYvB,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,iBALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,iBAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAKvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WACxB,0BAAMA,UAAY,QAAlB,qEACA,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,oDAAe,uBAAGwB,KAAO,6BAA6BxB,UAAY,WAAWyB,OAAS,UAAvE,cAAf,yGAEhC,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,iEAA4B,uBAAGA,UAAY,WAAWwB,KAAM,8CAA8CC,OAAS,UAAvF,wBAA5B,OAAwJ,uBAAGzB,UAAY,WAAWwB,KAAO,2DAA2DC,OAAS,UAArG,kBAExL,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,yGAAoE,uBAAGA,UAAY,WAAWwB,KAAO,yBAAyBC,OAAS,UAAnE,SAApE,iBAEhC,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,8GAEhC,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,6FAEhC,gC,+BAQJ,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACE,gE,GAjEuBG,IAAMC,W,iBCAxB2B,E,YAEnB,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,gBALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,gBAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAKvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WACxB,kBAACsB,EAAA,EAAD,CAAStB,UAAY,aACnB,kBAACuB,EAAA,EAAD,CAASC,KAAK,yCAAyCxB,UAAY,YAAW,uFAEhF,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,kBAAiB,qEAExC,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAOQ,IAAQP,OAAS,SAASzB,UAAY,YAAW,uDAEnE,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,8BAA8BC,OAAS,SAASzB,UAAY,YAAW,uDAEvF,6BACA,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,KAAK,wDAAwDC,OAAS,SAASzB,UAAY,YAAW,yDAEjH,gC,+BAQJ,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACE,8D,GA/DqBG,IAAMC,W,oECGtB6B,E,YAEnB,WAAY1B,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,eALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,eAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAKvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WACxB,0BAAMA,UAAY,QAAlB,mCACA,6BACA,0BAAMA,UAAY,QAAO,uBAAGA,UAAY,cAAf,sBAAzB,kLACA,6BACA,0BAAMA,UAAY,QAAO,uBAAGA,UAAY,cAAf,yBAAzB,6KACA,6BACA,0BAAMA,UAAY,QAAO,uBAAGA,UAAY,cAAf,cAAzB,uKACA,6BACA,6BAEF,0BAAMA,UAAY,QAAlB,6GACA,6BACE,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,yDAAoB,uBAAGA,UAAY,WAAWwB,KAAQU,IAAUT,OAAS,UAArD,cAApB,2FAEhC,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,iEAA4B,uBAAGA,UAAY,WAAWwB,KAAO,+CAA+CC,OAAS,UAAzF,wBAA5B,6CAEhC,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,+EAAqC,uBAAGA,UAAY,WAAWwB,KAAQW,IAASV,OAAS,UAApD,6BAArC,mBAA+I,uBAAGzB,UAAY,WAAWwB,KAAQY,IAAUX,OAAS,UAArD,2BAE/K,6BACA,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvB,UAAY,UAAS,8EAAyC,uBAAGA,UAAY,WAAWwB,KAAQa,IAASZ,OAAS,UAApD,gBAAzC,0CAEhC,gC,+BAQJ,OACI,kBAACL,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACE,gE,GAvEoBG,IAAMC,WCJrBkC,E,YAEnB,WAAY/B,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,YAAY,GAGhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,2EAcVC,KAAKJ,MAAMC,WAMZI,IAASC,uBAAuBC,SAASC,eAAe,aALxDH,IAASI,OAAOL,KAAKM,WAAYH,SAASC,eAAe,aAQ7DJ,KAAKO,SAAS,CAACV,YAAaG,KAAKJ,MAAMC,e,iCAMvC,OACE,kBAACW,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,WAC1B,0BAAMA,UAAY,QAAlB,mCACA,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,YACf,0CAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,SACnB,4BAAI,wCAEN,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,aACjB,2CAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,YACjB,uCAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,kBACjB,6CAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,YACjB,2CAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,gBACjB,4DAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,cACjB,yCAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,WACjB,sCAEJ,6BACA,kBAACsB,EAAA,EAAD,CAAStB,UAAY,cACjB,yCAEJ,gC,+BAQJ,OACI,kBAACoB,EAAA,EAAD,CAAKC,UAAQ,EAACrB,UAAY,OAC1B,kBAACsB,EAAA,EAAD,CAASI,QAAWd,KAAKF,YAAaV,UAAY,YAC9C,kBAAC,IAAD,KACE,4D,GAtFmBG,IAAMC,WCMrBmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJN9B,IAASI,OAAO,kBAAC,EAAD,MAASF,SAASC,eAAe,SACjDH,IAASI,OAAO,kBAAC,EAAD,MAAQF,SAASC,eAAe,QAChDH,IAASI,OAAO,kBAAC,EAAD,MAASF,SAASC,eAAe,SACjDH,IAASI,OAAO,kBAAC,EAAD,MAAcF,SAASC,eAAe,aACtDH,IAASI,OAAO,kBAAC,EAAD,MAAWF,SAASC,eAAe,UACnDH,IAASI,OAAO,kBAAC,EAAD,MAAYF,SAASC,eAAe,WACpDH,IAASI,OAAO,kBAAC,EAAD,MAAeF,SAASC,eAAe,cACvDH,IAASI,OAAO,kBAAC,EAAD,MAAaF,SAASC,eAAe,YACrDH,IAASI,OAAO,kBAAC,EAAD,MAAcF,SAASC,eAAe,aD2GhD,kBAAmB4B,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.86ea5ff5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Figaro.8342d5f3.wav\";","module.exports = __webpack_public_path__ + \"static/media/Resume.c513d8fc.pdf\";","module.exports = __webpack_public_path__ + \"static/media/MATH3620.81cba9d9.pdf\";","module.exports = __webpack_public_path__ + \"static/media/LAT3130.6344087c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/LAT3170.0a2bfa01.pdf\";","module.exports = __webpack_public_path__ + \"static/media/HART1330W.ed2b0d3a.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport Typist from 'react-typist';\nimport { BrowserRouter } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n      <div className=\"App-header\">\n        <BrowserRouter basename=\"http://petek222.github.io/peter_koncelik\" />\n        <Typist className=\"myName\">\n          <code>Peter Koncelik.</code>\n        </Typist>\n      </div>\n  );\n}\nexport default App;\n","import React, {Component} from 'react';\nimport './App.css';\n\nexport default class Bio extends React.Component {\n\n    render() {\n        return (\n        <div>\n            <code className = \"bio\">Hi! My name is Peter Koncelik, and I am currently a Junior at Vanderbilt University\n                studying Computer Science, Applied Mathematics, and Classics. I most recently worked as a Software\n                Engineer Intern at MTD Products in Cleveland, OH. I currently work in a NASA-sponsored lab researching \n                high-performance computing in the presence of outer-space radiation effects. I also work as a TA for \n                Intermediate Software Design in the Vanderbilt Computer Science Department. \n            </code> \n            <code className = \"bio\">    \n                I have experience in development across the full stack, and I will be working as a Software Engineering intern\n                at Capital One in the Washington DC area in the coming summer. Look below to see some of my work, interests, projects, and contact information. \n            </code>\n        </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Typist from 'react-typist';\n\nexport default class PageInfo extends React.Component {\n\n    render() {\n        return (\n        <Typist>\n        <div>\n            <code className = \"bio\">This website was built with React.js, HTML5, and CSS</code> \n        </div>\n        </Typist>\n        );\n    }\n}","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\n\n\nexport default class Work extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isToggleOn: false\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    // On this click we will want to render a full Navbar with desired links \n    handleClick() {\n\n        // Add Stuff to DOM\n        if (!this.state.isToggleOn) {\n            ReactDOM.render(this.workList(), document.getElementById('worklist'));\n\n        }\n\n        else {\n            ReactDOM.unmountComponentAtNode(document.getElementById('worklist'));\n        }\n\n        this.setState({isToggleOn: !this.state.isToggleOn});\n    }\n\n    // Alter this list to display desired stuff\n    workList() {\n        return (\n          <Nav vertical className = \"workNav\">\n            <NavItem className = \"listElem \">\n              <NavLink href=\"https://github.com/petek222/MTD_Products_Order_Tracker\" target = \"_blank\" className = \"listElem\"><code>📑 Built an application to track MTD orders throughout the entire order process, from placement to shipment.</code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink href=\"https://github.com/petek222/MTD_Products_Order_Tracker_UI\" target = \"_blank\" className = \"listElem\"><code>✨ React.js UI for order tracking application for straightforward use across the entire MTD company.</code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink className = \"listElemStatic\"><code>🚨 Enhanced preexisting MTD codebase with mailing, error-handling, and catalog-synchronization functionality. </code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink href=\"https://github.com/petek222/vandy_apps_lec\" target = \"_blank\" className = \"listElem\"><code>🎓 Taught a course on Asynchronous Programming in Node.js for VandyApps.</code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink className = \"listElemStatic\"><code>👨‍🏫 Currently TA Intermediate Software Design at Vanderbilt University (Previously taught Calculus and Linear Algebra).</code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink href=\"https://engineering.vanderbilt.edu/eecs/brochure/our-research/ISDE.php\" target = \"_blank\" className = \"listElem\"><code>🚀 NASA-Vanderbilt Lab researcher the performance of high-power computers in high-radiation, outer space environments</code></NavLink>\n            </NavItem>\n            <br></br>\n            <NavItem>\n              <NavLink href=\"https://www.capitalone.com/tech/\" target = \"_blank\" className = \"listElem\"><code>💳 Incoming Capital One Software Engineer Intern, Summer 2020.</code></NavLink>\n            </NavItem>\n          </Nav>\n        );\n    }\n\n    render() {\n        return (\n            <Nav vertical className = \"nav\">\n            <NavItem onClick = {this.handleClick} className = \"listElem\">\n                <Typist>\n                    <code>💼 Work.</code>\n                </Typist>\n            </NavItem>\n          </Nav>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\nimport figaro from '../documents/Figaro.wav';\n\n\nexport default class Projects extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          isToggleOn: false\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  // On this click we will want to render a full Navbar with desired links \n  handleClick() {\n\n      // Add Stuff to DOM\n      if (!this.state.isToggleOn) {\n          ReactDOM.render(this.workList(), document.getElementById('projectlist'));\n\n      }\n\n      else {\n          ReactDOM.unmountComponentAtNode(document.getElementById('projectlist'));\n      }\n\n      this.setState({isToggleOn: !this.state.isToggleOn});\n  }\n\n  // Alter this list to display desired stuff\n  workList() {\n      return (\n        <Nav vertical className = \"workNav\">\n            <NavItem>\n              <NavLink href=\"https://www.npmjs.com/package/trimap_config_loader\" target = \"_blank\" className = \"listElem\"><code>💨 Node.js npm module for secure, efficient, and speedy configuration loading.</code></NavLink>\n            </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href=\"https://github.com/petek222/LatinScansion\" target = \"_blank\" className = \"listElem\"><code>📝 Applicaton to scan the meter of ancient Latin poetry for use in High School/College Latin Courses.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            {/* Fix this file download */}\n            <NavLink href={figaro} download target = \"_blank\" className = \"listElem\"><code> 🎼 Guitar-String simulation (course), extended to play the opening measures of Mozart's Marriage of Figaro.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href=\"https://github.com/petek222/petek222.github.io\" target = \"_blank\" className = \"listElem\"><code>🙋‍♂️ This Website :).</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href=\"https://github.com/petek222/bg_api\" target = \"_blank\" className = \"listElem\"><code>🎲 REST API for converting troublesome BoardGameGeek.com XML data to clean, easy-to-use JSON.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"listElemStatic\"><code>❓ More to come...</code></NavLink>\n          </NavItem>\n        </Nav>\n      );\n  }\n\n\n  render() {\n      return (\n          <Nav vertical className = \"nav\">\n          <NavItem onClick = {this.handleClick} className = \"listElem\">\n              <Typist>\n                <code>🚧 Projects.</code>\n              </Typist>\n          </NavItem>\n        </Nav>\n      );\n  }\n}","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\n\n\nexport default class Interests extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          isToggleOn: false\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  // On this click we will want to render a full Navbar with desired links \n  handleClick() {\n\n      // Add Stuff to DOM\n      if (!this.state.isToggleOn) {\n          ReactDOM.render(this.workList(), document.getElementById('interestlist'));\n\n      }\n\n      else {\n          ReactDOM.unmountComponentAtNode(document.getElementById('interestlist'));\n      }\n\n      this.setState({isToggleOn: !this.state.isToggleOn});\n  }\n\n  // Alter this list to display desired stuff\n  workList() {\n      return (\n        <Nav vertical className = \"workNav\">\n          <code className = \"prof\">Below are some of my hobbies and the things I like to do for fun.</code>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>📈 Hobby <a href = \"https://boardgamegeek.com/\" className = \"linkElem\" target = \"_blank\">Boardgames</a>. Heavy Economic/European strategy boardgames are my preference, but I'll try almost any game once.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>🎵 Music. Preferrably <a className = \"linkElem\" href =\"https://www.youtube.com/watch?v=Rb0UmrCXxVA\" target = \"_blank\">Classical and Mozart</a> or <a className = \"linkElem\" href = \"https://www.youtube.com/playlist?list=PLE774335E942D5938\" target = \"_blank\">Kanye West.</a></code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>📱 Tech. Interested in all new technology, especially mobile. <a className = \"linkElem\" href = \"https://www.apple.com/\" target = \"_blank\">Apple</a> fan first.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>🍔 Food. Trying new Restaurants and Coffee Places wherever I am.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>🏀 Basketball. I'll play pickup whenever I can.</code></NavLink>\n          </NavItem>\n          <br></br>\n        </Nav>\n      );\n  }\n\n\n\n  render() {\n      return (\n          <Nav vertical className = \"nav\">\n          <NavItem onClick = {this.handleClick} className = \"listElem\">\n              <Typist>\n                <code>👌 Interests.</code>\n              </Typist>\n          </NavItem>\n        </Nav>\n      );\n  }\n}\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\nimport resume from '../documents/Resume.pdf';\n\nexport default class Contact extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          isToggleOn: false\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  // On this click we will want to render a full Navbar with desired links \n  handleClick() {\n\n      // Add Stuff to DOM\n      if (!this.state.isToggleOn) {\n          ReactDOM.render(this.workList(), document.getElementById('contactlist'));\n\n      }\n\n      else {\n          ReactDOM.unmountComponentAtNode(document.getElementById('contactlist'));\n      }\n\n      this.setState({isToggleOn: !this.state.isToggleOn});\n  }\n\n  // Alter this list to display desired stuff\n  workList() {\n      return (\n        <Nav vertical className = \"workNav\">\n          <NavItem className = \"listElem \">\n            <NavLink href=\"mailto:peter.e.koncelik@vanderbilt.edu\" className = \"listElem\"><code>📥 Email: peter.e.koncelik@vanderbilt.edu</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"listElemStatic\"><code> 📱 Phone: 440-409-4313</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href= {resume} target = \"_blank\" className = \"listElem\"><code>📄 Resume</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href=\"https://github.com/petek222\" target = \"_blank\" className = \"listElem\"><code>💻 Github</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink href=\"https://www.linkedin.com/in/peter-koncelik-120734157/\" target = \"_blank\" className = \"listElem\"><code>🤝 Linkedin</code></NavLink>\n          </NavItem>\n          <br></br>\n        </Nav>\n      );\n  }\n\n\n\n  render() {\n      return (\n          <Nav vertical className = \"nav\">\n          <NavItem onClick = {this.handleClick} className = \"listElem\">\n              <Typist>\n                <code>📞 Contact.</code>\n              </Typist>\n          </NavItem>\n        </Nav>\n      );\n  }\n}\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\nimport math3620 from '../documents/MATH3620.pdf';\nimport lat3130 from '../documents/LAT3130.pdf';\nimport lat3170 from '../documents/LAT3170.pdf';\nimport hart1330 from '../documents/HART1330W.pdf';\n\nexport default class School extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          isToggleOn: false\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  // On this click we will want to render a full Navbar with desired links \n  handleClick() {\n\n      // Add Stuff to DOM\n      if (!this.state.isToggleOn) {\n          ReactDOM.render(this.workList(), document.getElementById('schoollist'));\n\n      }\n\n      else {\n          ReactDOM.unmountComponentAtNode(document.getElementById('schoollist'));\n      }\n\n      this.setState({isToggleOn: !this.state.isToggleOn});\n  }\n\n  // Alter this list to display desired stuff\n  workList() {\n      return (\n        <Nav vertical className = \"workNav\">\n          <code className = 'prof'>Coursework of Interest by Major</code>\n          <br></br>\n          <code className = \"prof\"><a className = \"headerElem\">Computer Science: </a>Discrete Structures, Program Design and Data Structres, Intermediate Software Design, Computer Organization, Algorithms, Programming Languges, Principles of Operating Systems</code>\n          <br></br>\n          <code className = \"prof\"><a className = \"headerElem\">Applied Mathematics: </a>Multivariable Calculus, Linear Algebra, Differential Equations, Introuction to Numerical Mathematics, Statistics and Probability, Error-Correcting Codes and Cryptography</code>\n          <br></br>\n          <code className = \"prof\"><a className = \"headerElem\">Classics: </a>(Latin): Prosaic Ancient Latin, Roman Satire, the Aeneid (History): Roman Civilization, Alexander the Great, Classical Literature, Dante's Commedia, The Trojan War</code>\n          <br></br>\n          <br></br>\n\n        <code className = 'prof'>Below are a few select assignments of interest. Computer Science coursework is omitted due to honor code.</code>\n        <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>📐 Math. This <a className = \"linkElem\" href = {math3620} target = \"_blank\">assignment</a> concerning the effectiveness of trigonometiric and spline data interpolant functions</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>📐 Math. This section <a className = \"linkElem\" href = \"http://www.nada.kth.se/~annak/diracdelta.pdf\" target = \"_blank\">Dirac-Delta Function</a> from my Differential Equations course.</code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>🏛️ Classics. See essays about <a className = \"linkElem\" href = {lat3130} target = \"_blank\">Masculinity in the Aeneid</a> and the famous <a className = \"linkElem\" href = {hart1330} target = \"_blank\">'Ara Pacis Augustae'</a></code></NavLink>\n          </NavItem>\n          <br></br>\n          <NavItem>\n            <NavLink className = \"static\"><code>📜 Classics. Also see this ancient <a className = \"linkElem\" href = {lat3170} target = \"_blank\">Latin Satire</a> I composed in the style of Juvenal.</code></NavLink>\n          </NavItem>\n          <br></br>\n        </Nav>\n      );\n  }\n\n\n\n  render() {\n      return (\n          <Nav vertical className = \"nav\">\n          <NavItem onClick = {this.handleClick} className = \"listElem\">\n              <Typist>\n                <code>📙 Academics.</code>\n              </Typist>\n          </NavItem>\n        </Nav>\n      );\n  }\n}\n\n\n\n","import React, {Component} from 'react';\nimport '../App.css';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport Typist from 'react-typist';\nimport ReactDOM from 'react-dom';\n\nexport default class Tools extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          isToggleOn: false\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n  }\n\n  // On this click we will want to render a full Navbar with desired links \n  handleClick() {\n\n      // Add Stuff to DOM\n      if (!this.state.isToggleOn) {\n          ReactDOM.render(this.workList(), document.getElementById('toollist'));\n\n      }\n\n      else {\n          ReactDOM.unmountComponentAtNode(document.getElementById('toollist'));\n      }\n\n      this.setState({isToggleOn: !this.state.isToggleOn});\n  }\n\n  // Alter this list to display desired stuff\n  // Maybe Make this non-vertical???\n  workList() {\n      return (\n        <Nav vertical className = \"workNav\">\n        <code className = 'prof'>Listed by order of proficiency.</code>\n        <br></br>\n        <NavItem className = \"nodeElem\">\n              <code>Node.js</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"cElem\">\n            <li><code> C++</code></li>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"reactElem\">\n              <code>React.js</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"javaElem\">\n              <code>Java</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"javascriptElem\">\n              <code>JavaScript</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"htmlElem\">\n              <code>HTML/CSS</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"assemblyElem\">\n              <code>Assembly (ARM, MIPS, x86)</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"pythonElem\">\n              <code>Python</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"sqlElem\">\n              <code>SQL</code>\n          </NavItem>\n          <br></br>\n          <NavItem className = \"matlabElem\">\n              <code>Matlab</code>\n          </NavItem>\n          <br></br>\n        </Nav>\n      );\n  }\n\n\n\n  render() {\n      return (\n          <Nav vertical className = \"nav\">\n          <NavItem onClick = {this.handleClick} className = \"listElem\">\n              <Typist>\n                <code>🔧 Tools.</code>\n              </Typist>\n          </NavItem>\n        </Nav>\n      );\n  }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Bio from './bio';\nimport PageInfo from './pageinfo';\nimport Work from './tabs/work';\nimport Projects from './tabs/projects';\nimport Interests from './tabs/interests';\nimport Contact from './tabs/contact';\nimport School from './tabs/school';\nimport Tools from './tabs/tools';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Bio/>, document.getElementById('bio'));\nReactDOM.render(<Work/>, document.getElementById('work'));\nReactDOM.render(<Projects />, document.getElementById('projects'));\nReactDOM.render(<Tools />, document.getElementById('tools'));\nReactDOM.render(<School />, document.getElementById('school'));\nReactDOM.render(<Interests />, document.getElementById('interests'));\nReactDOM.render(<Contact />, document.getElementById('contact'));\nReactDOM.render(<PageInfo />, document.getElementById('pageinfo'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}